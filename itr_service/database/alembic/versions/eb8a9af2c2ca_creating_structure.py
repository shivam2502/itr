"""Creating structure

Revision ID: eb8a9af2c2ca
Revises: 3c85fd886a6d
Create Date: 2024-03-28 15:41:35.048432

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'eb8a9af2c2ca'
down_revision: Union[str, None] = '3c85fd886a6d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('residence_no', sa.String(), nullable=True),
    sa.Column('residence_name', sa.String(), nullable=True),
    sa.Column('road_or_street', sa.String(), nullable=True),
    sa.Column('locality_or_area', sa.String(), nullable=True),
    sa.Column('city_or_town_or_district', sa.String(), nullable=True),
    sa.Column('state_code', sa.String(), nullable=True),
    sa.Column('country_code', sa.String(), nullable=True),
    sa.Column('pin_code', sa.Integer(), nullable=True),
    sa.Column('country_code_mobile', sa.Integer(), nullable=True),
    sa.Column('mobile_no', sa.Integer(), nullable=True),
    sa.Column('email_address', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessee_name',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('sur_name_or_org_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('employer_or_deductor_or_collect_detl',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('TAN', sa.String(), nullable=True),
    sa.Column('EmployerOrDeductorOrCollecterName', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exempt_inc_agri_oth_us10',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ExemptIncAgriOthUs10Total', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('filing_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ReturnFileSec', sa.Integer(), nullable=True),
    sa.Column('SeventhProvisio139', sa.String(), nullable=True),
    sa.Column('NewTaxRegime', sa.String(), nullable=True),
    sa.Column('clauseiv7provisio139i', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itr1_income_deductions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('GrossSalary', sa.Integer(), nullable=True),
    sa.Column('Salary', sa.Integer(), nullable=True),
    sa.Column('PerquisitesValue', sa.Integer(), nullable=True),
    sa.Column('ProfitsInSalary', sa.Integer(), nullable=True),
    sa.Column('Increliefus89A', sa.Integer(), nullable=True),
    sa.Column('Increliefus89AOS', sa.Integer(), nullable=True),
    sa.Column('IncomeNotified89A', sa.Integer(), nullable=True),
    sa.Column('IncomeNotifiedOther89A', sa.Integer(), nullable=True),
    sa.Column('NetSalary', sa.Integer(), nullable=True),
    sa.Column('DeductionUs16', sa.Integer(), nullable=True),
    sa.Column('DeductionUs16ia', sa.Integer(), nullable=True),
    sa.Column('EntertainmentAlw16ii', sa.Integer(), nullable=True),
    sa.Column('ProfessionalTaxUs16iii', sa.Integer(), nullable=True),
    sa.Column('IncomeFromSal', sa.Integer(), nullable=True),
    sa.Column('TypeOfHP', sa.String(), nullable=True),
    sa.Column('GrossRentReceived', sa.Integer(), nullable=True),
    sa.Column('TaxPaidlocalAuth', sa.Integer(), nullable=True),
    sa.Column('AnnualValue', sa.Integer(), nullable=True),
    sa.Column('StandardDeduction', sa.Integer(), nullable=True),
    sa.Column('InterestPayable', sa.Integer(), nullable=True),
    sa.Column('ArrearsUnrealizedRentRcvd', sa.Integer(), nullable=True),
    sa.Column('TotalIncomeOfHP', sa.Integer(), nullable=True),
    sa.Column('IncomeOthSrc', sa.Integer(), nullable=True),
    sa.Column('DeductionUs57iia', sa.Integer(), nullable=True),
    sa.Column('GrossTotIncome', sa.Integer(), nullable=True),
    sa.Column('TotalIncome', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('refund',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('RefundDue', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('taxes_paid',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('AdvanceTax', sa.Integer(), nullable=True),
    sa.Column('TDS', sa.Integer(), nullable=True),
    sa.Column('TCS', sa.Integer(), nullable=True),
    sa.Column('SelfAssessmentTax', sa.Integer(), nullable=True),
    sa.Column('TotalTaxesPaid', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tds_on_oth_than_sals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('TotalTDSonOthThanSals', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tds_on_salaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('TotalTDSonSalaries', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('verification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Declaration_AssesseeVerName', sa.String(), nullable=True),
    sa.Column('Declaration_FatherName', sa.String(), nullable=True),
    sa.Column('Declaration_AssesseeVerPAN', sa.String(), nullable=True),
    sa.Column('Capacity', sa.Enum('S', 'O', name='capacity_enum'), nullable=True),
    sa.Column('Place', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank_account_dtls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('IFSCCode', sa.String(), nullable=True),
    sa.Column('BankName', sa.String(), nullable=True),
    sa.Column('BankAccountNo', sa.String(), nullable=True),
    sa.Column('UseForRefund', sa.String(), nullable=True),
    sa.Column('refund_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['refund_id'], ['refund.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('declaration',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('AssesseeVerName', sa.String(), nullable=True),
    sa.Column('FatherName', sa.String(), nullable=True),
    sa.Column('AssesseeVerPAN', sa.String(), nullable=True),
    sa.Column('verification_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['verification_id'], ['verification.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deduct_und_chap_via',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Section80C', sa.Integer(), nullable=True),
    sa.Column('Section80CCC', sa.Integer(), nullable=True),
    sa.Column('Section80CCDEmployeeOrSE', sa.Integer(), nullable=True),
    sa.Column('Section80CCD1B', sa.Integer(), nullable=True),
    sa.Column('Section80CCDEmployer', sa.Integer(), nullable=True),
    sa.Column('Section80D', sa.Integer(), nullable=True),
    sa.Column('Section80DD', sa.Integer(), nullable=True),
    sa.Column('Section80DDB', sa.Integer(), nullable=True),
    sa.Column('Section80E', sa.Integer(), nullable=True),
    sa.Column('Section80EE', sa.Integer(), nullable=True),
    sa.Column('Section80EEA', sa.Integer(), nullable=True),
    sa.Column('Section80EEB', sa.Integer(), nullable=True),
    sa.Column('Section80G', sa.Integer(), nullable=True),
    sa.Column('Section80GG', sa.Integer(), nullable=True),
    sa.Column('Section80GGA', sa.Integer(), nullable=True),
    sa.Column('Section80GGC', sa.Integer(), nullable=True),
    sa.Column('AnyOthSec80CCH', sa.Integer(), nullable=True),
    sa.Column('Section80U', sa.Integer(), nullable=True),
    sa.Column('Section80TTA', sa.Integer(), nullable=True),
    sa.Column('Section80TTB', sa.Integer(), nullable=True),
    sa.Column('TotalChapVIADeductions', sa.Integer(), nullable=True),
    sa.Column('itr1_income_deductions_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['itr1_income_deductions_id'], ['itr1_income_deductions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exempt_inc_agri_oth_us10_dtls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('NatureDesc', sa.String(), nullable=True),
    sa.Column('OthAmount', sa.Integer(), nullable=True),
    sa.Column('exempt_inc_agri_oth_us10_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exempt_inc_agri_oth_us10_id'], ['exempt_inc_agri_oth_us10.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('personal_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessee_name_id', sa.Integer(), nullable=True),
    sa.Column('pan', sa.String(length=10), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('dob', sa.String(), nullable=True),
    sa.Column('employer_category', sa.String(), nullable=True),
    sa.Column('aadhaar_card_no', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['assessee_name_id'], ['assessee_name.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('pan')
    )
    op.create_table('tds_on_oth_than_sal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('AmtForTaxDeduct', sa.Integer(), nullable=True),
    sa.Column('DeductedYr', sa.String(), nullable=True),
    sa.Column('TotTDSOnAmtPaid', sa.Integer(), nullable=True),
    sa.Column('ClaimOutOfTotTDSOnAmtPaid', sa.Integer(), nullable=True),
    sa.Column('employer_or_deductor_or_collect_detl_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employer_or_deductor_or_collect_detl_id'], ['employer_or_deductor_or_collect_detl.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tds_on_salary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('IncChrgSal', sa.Integer(), nullable=True),
    sa.Column('TotalTDSSal', sa.Integer(), nullable=True),
    sa.Column('employer_or_deductor_or_collect_detl_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employer_or_deductor_or_collect_detl_id'], ['employer_or_deductor_or_collect_detl.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usr_deduct_und_chap_via',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Section80C', sa.Integer(), nullable=True),
    sa.Column('Section80CCC', sa.Integer(), nullable=True),
    sa.Column('Section80CCDEmployeeOrSE', sa.Integer(), nullable=True),
    sa.Column('Section80CCD1B', sa.Integer(), nullable=True),
    sa.Column('Section80CCDEmployer', sa.Integer(), nullable=True),
    sa.Column('Section80D', sa.Integer(), nullable=True),
    sa.Column('Section80DD', sa.Integer(), nullable=True),
    sa.Column('Section80DDB', sa.Integer(), nullable=True),
    sa.Column('Section80E', sa.Integer(), nullable=True),
    sa.Column('Section80EE', sa.Integer(), nullable=True),
    sa.Column('Section80EEA', sa.Integer(), nullable=True),
    sa.Column('Section80EEB', sa.Integer(), nullable=True),
    sa.Column('Section80G', sa.Integer(), nullable=True),
    sa.Column('Section80GG', sa.Integer(), nullable=True),
    sa.Column('Section80GGA', sa.Integer(), nullable=True),
    sa.Column('Section80GGC', sa.Integer(), nullable=True),
    sa.Column('AnyOthSec80CCH', sa.Integer(), nullable=True),
    sa.Column('Section80U', sa.Integer(), nullable=True),
    sa.Column('Section80TTA', sa.Integer(), nullable=True),
    sa.Column('Section80TTB', sa.Integer(), nullable=True),
    sa.Column('TotalChapVIADeductions', sa.Integer(), nullable=True),
    sa.Column('itr1_income_deductions_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['itr1_income_deductions_id'], ['itr1_income_deductions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('usr_deduct_und_chap_via')
    op.drop_table('tds_on_salary')
    op.drop_table('tds_on_oth_than_sal')
    op.drop_table('personal_info')
    op.drop_table('exempt_inc_agri_oth_us10_dtls')
    op.drop_table('deduct_und_chap_via')
    op.drop_table('declaration')
    op.drop_table('bank_account_dtls')
    op.drop_table('verification')
    op.drop_table('tds_on_salaries')
    op.drop_table('tds_on_oth_than_sals')
    op.drop_table('taxes_paid')
    op.drop_table('refund')
    op.drop_table('itr1_income_deductions')
    op.drop_table('filing_status')
    op.drop_table('exempt_inc_agri_oth_us10')
    op.drop_table('employer_or_deductor_or_collect_detl')
    op.drop_table('assessee_name')
    op.drop_table('address')
    # ### end Alembic commands ###
